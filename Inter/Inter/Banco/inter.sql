CREATE DATABASE INTER;
USE INTER;

CREATE TABLE PER_PERFIL(
  PER_MATRICULA VARCHAR(20) PRIMARY KEY,
  PER_DESCRICAO INT NOT NULL,
  PER_LOGIN VARCHAR(50),
  PER_SENHA VARCHAR(256),
  PER_USUARIO VARCHAR(50)
);

select sha1('123');
insert into per_perfil values
('adm_master', 1, 'adm_master', '40bd001563085fc35165329ea1ff5c5ecbdbbeef','Master');

CREATE TABLE SAN_SEMESTRE_ANO(
  SAN_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  SAN_ANO INT NOT NULL,
  SAN_SEMESTRE INT NOT NULL,
  SAN_ATIVO BOOL NOT NULL
);

CREATE TABLE PRI_PROJETO_INTER(
  PRI_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  SAN_CODIGO INT NOT NULL,
  PRI_SEMESTRE INT NOT NULL,
  CUR_NOME VARCHAR(50) NOT NULL,
  FOREIGN KEY(SAN_CODIGO) REFERENCES SAN_SEMESTRE_ANO(SAN_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE API_ATRIBUICAO_PI(
  PRI_CODIGO INT NOT NULL,
  ADI_CODIGO INT NOT NULL,
  DIS_CODIGO INT NOT NULL,
  PRO_NOME VARCHAR(100) NOT NULL,
  PRIMARY KEY(ADI_CODIGO, PRI_CODIGO),
  FOREIGN KEY(PRI_CODIGO) REFERENCES PRI_PROJETO_INTER(PRI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE EVE_EVENTOS(
  EVE_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  PRI_CODIGO INT NOT NULL,
  EVE_DATA DATE NOT NULL,
  EVE_TIPO VARCHAR(100),
  EVE_USUARIO VARCHAR(50),
  FOREIGN KEY(PRI_CODIGO) REFERENCES PRI_PROJETO_INTER(PRI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE GRU_GRUPO(
  GRU_CODIGO INT PRIMARY KEY,
  PRI_CODIGO INT NOT NULL,
  GRU_NOME_PROJETO VARCHAR(150) NOT NULL,
  GRU_MEDIA DOUBLE,
  GRU_FINALIZADO BOOL NOT NULL,
  GRU_USUARIO VARCHAR(50),
  FOREIGN KEY(PRI_CODIGO) REFERENCES PRI_PROJETO_INTER(PRI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE REQ_REQUERIMENTO(
  REQ_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  PRO_MATRICULA VARCHAR(20) NOT NULL,
  GRU_CODIGO INT,
  REQ_ASSUNTO TEXT,
  REQ_DT_REQUISICAO DATETIME NOT NULL,
  REQ_STATUS INT NOT NULL,
  REQ_CATEGORIA varchar(100) NOT NULL,
  REQ_USUARIO varchar(50),
  FOREIGN KEY(GRU_CODIGO) REFERENCES GRU_GRUPO(GRU_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION

);

CREATE TABLE MSG_MENSAGEM(
  MSG_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  REQ_CODIGO INT NOT NULL,
  PRO_MATRICULA VARCHAR(20),
  PER_MATRICULA VARCHAR(50),
  MSG_DT_ENVIO DATETIME NOT NULL,
  MSG_CONTEUDO MEDIUMTEXT NOT NULL,
  MSG_USUARIO VARCHAR(50),
  FOREIGN KEY(REQ_CODIGO) REFERENCES REQ_REQUERIMENTO(REQ_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(PER_MATRICULA) REFERENCES PER_PERFIL(PER_MATRICULA) ON UPDATE CASCADE ON DELETE NO ACTION

);

CREATE TABLE GAL_GRUPO_ALUNO(
  ALU_MATRICULA VARCHAR(20) NOT NULL,
  GRU_CODIGO INT NOT NULL,
  GAL_USUARIO VARCHAR(50),
  PRIMARY KEY(ALU_MATRICULA, GRU_CODIGO),
  FOREIGN KEY(GRU_CODIGO) REFERENCES GRU_GRUPO(GRU_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE CGE_CRITERIOS_GERAIS(
  CGE_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  CGE_NOME VARCHAR(50),
  CGE_DESCRICAO VARCHAR(200),
  CGE_ATIVO BOOL,
  CGE_USUARIO VARCHAR(50)
);

INSERT INTO CGE_CRITERIOS_GERAIS (CGE_CODIGO,CGE_NOME,CGE_DESCRICAO,CGE_ATIVO,CGE_USUARIO) VALUES
 (1,'Fala','Dicção do aluno durante apresentação.',1,'MASTER'),
 (2,'Vestimenta','Vestimenta do aluno na apresentação.',1,'MASTER'),
 (3,'Conhecimento','Conhecimento do aluno sobre assunto exposto.',1,'MASTER'),
 (4,'Postura','Comportamento do aluno durante apresentação.',1,'MASTER');

CREATE TABLE CPI_CRITERIO_PI(
  CPI_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  CGE_CODIGO INT NOT NULL,
  PRI_CODIGO INT NOT NULL,
  ADI_CODIGO INT NOT NULL,
  CPI_PESO INT NOT NULL,
  CPI_USUARIO VARCHAR(50),
  FOREIGN KEY(CGE_CODIGO) REFERENCES CGE_CRITERIOS_GERAIS(CGE_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(PRI_CODIGO) REFERENCES API_ATRIBUICAO_PI(PRI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(ADI_CODIGO) REFERENCES API_ATRIBUICAO_PI(ADI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE HIS_HISTORICO_ALUNO_DISCIPLINA(
  HIS_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  ALU_MATRICULA VARCHAR(20) NOT NULL,
  CPI_CODIGO INT NOT NULL,
  HIS_NOTA DOUBLE,
  HIS_USUARIO VARCHAR(50),
  FOREIGN KEY(ALU_MATRICULA) REFERENCES GAL_GRUPO_ALUNO(ALU_MATRICULA) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(CPI_CODIGO) REFERENCES CPI_CRITERIO_PI(CPI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
);

CREATE TABLE MDD_MEDIA_DISCIPLINA(
  MDD_CODIGO INT PRIMARY KEY AUTO_INCREMENT,
  PRI_CODIGO INT NOT NULL,
  ADI_CODIGO INT NOT NULL,
  GRU_CODIGO INT NOT NULL,
  MDD_MEDIA DOUBLE NOT NULL,
  FOREIGN KEY(PRI_CODIGO) REFERENCES API_ATRIBUICAO_PI(PRI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(ADI_CODIGO) REFERENCES API_ATRIBUICAO_PI(ADI_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY(GRU_CODIGO) REFERENCES GRU_GRUPO(GRU_CODIGO) ON UPDATE CASCADE ON DELETE NO ACTION
  );

CREATE TABLE AUD_AUDITORIA(
  AUD_CODIGO int(11) NOT NULL AUTO_INCREMENT,
  AUD_DATA datetime DEFAULT NULL,
  AUD_USUARIO varchar(50) DEFAULT NULL,
  AUD_ACAO enum('INSERCAO','ALTERACAO','EXCLUSAO') DEFAULT NULL,
  AUD_TABELA varchar(50) DEFAULT NULL,
  AUD_DADOS_ANTES text,
  AUD_DADOS_DEPOIS text,
  PRIMARY KEY (`AUD_CODIGO`)
);


DELIMITER |
	CREATE TRIGGER TRG_INSERT_CGE_CRITERIOS_GERAIS AFTER INSERT ON CGE_CRITERIOS_GERAIS
	FOR EACH ROW 
		BEGIN
		SET @NEW_ATIVO = 'ATIVO';
 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.CGE_USUARIO, 'INSERCAO', 'CGE_CRITERIOS_GERAIS', 'NOVO CRITERIO', CONCAT(NEW.CGE_CODIGO, ' - ',NEW.CGE_NOME, ' - ', NEW.CGE_DESCRICAO, ' - ', @NEW_ATIVO));
 		END;
|


DELIMITER |
	CREATE TRIGGER TRG_UPDATE_CGE_CRITERIOS_GERAIS AFTER UPDATE ON CGE_CRITERIOS_GERAIS
    FOR EACH ROW 
		BEGIN
		BEGIN
		SET @ATIVO= OLD.CGE_ATIVO;
        IF(@ATIVO = 1) THEN
			SET @OLD_ATIVO = 'ATIVO';
            SET @NEW_ATIVO = 'DESATIVADO';
        ELSE
			SET @OLD_ATIVO = 'DESATIVADO';
            SET @NEW_ATIVO = 'ATIVO';
        END IF;

 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.CGE_USUARIO, 'ALTERACAO', 'CGE_CRITERIOS_GERAIS', CONCAT(OLD.CGE_CODIGO, ' - ',OLD.CGE_NOME, ' - ', OLD.CGE_DESCRICAO, ' - ', @OLD_ATIVO), CONCAT(NEW.CGE_CODIGO, ' - ',NEW.CGE_NOME, ' - ', NEW.CGE_DESCRICAO, ' - ', @NEW_ATIVO));
 		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_CPI_CRITERIO_PI AFTER INSERT ON CPI_CRITERIO_PI
	FOR EACH ROW 
		BEGIN
  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.CPI_USUARIO, 'INSERCAO', 'CPI_CRITERIO_PI', 'NOVO CRITERIO RELACIONADO AO PI', CONCAT(NEW.CPI_CODIGO, ' - ',NEW.CGE_CODIGO, ' - ', NEW.PRI_CODIGO, ' - ', NEW.ADI_CODIGO, ' - ', NEW.CPI_PESO));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_EVE_EVENTOS AFTER INSERT ON EVE_EVENTOS
	FOR EACH ROW 
		BEGIN
   			INSERT INTO AUD_AUDITORIA VALUES
   			(0, sysdate(), NEW.EVE_USUARIO, 'INSERCAO', 'EVE_EVENTOS', 'NOVO EVENTO', CONCAT(NEW.EVE_CODIGO, ' - ', NEW.PRI_CODIGO, ' - ', NEW.EVE_DATA, ' - ', NEW.EVE_TIPO));
   		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_GAL_GRUPO_ALUNO AFTER INSERT ON GAL_GRUPO_ALUNO
	FOR EACH ROW 
		BEGIN
  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.GAL_USUARIO, 'INSERCAO', 'GAL_GRUPO_ALUNO', 'NOVO ALUNO RELACIONADO AO GRUPO', CONCAT(NEW.ALU_MATRICULA, ' - ', NEW.GRU_CODIGO));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_GRU_GRUPO AFTER INSERT ON GRU_GRUPO
	FOR EACH ROW 
		BEGIN
		SET @NEW_FINALIZADO = 'EM ANDAMENTO';

  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.GRU_USUARIO, 'INSERCAO', 'GRU_GRUPO', 'NOVO GRUPO', CONCAT(NEW.GRU_CODIGO, ' - ', NEW.PRI_CODIGO, ' - ', NEW.GRU_NOME_PROJETO, ' - ', @NEW_FINALIZADO));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_UPDATE_GRU_GRUPO AFTER UPDATE ON GRU_GRUPO
    FOR EACH ROW 
		BEGIN
		SET @FINALIZADO = OLD.GRU_FINALIZADO;
        IF(@FINALIZADO = 1) THEN
			SET @OLD_FINALIZADO = 'FINALIZADO';
            SET @NEW_FINALIZADO = 'EM ANDAMENTO';
        ELSE
			SET @OLD_FINALIZADO = 'EM ANDAMENTO';
            SET @NEW_FINALIZADO = 'FINALIZADO';
        END IF;

 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.GRU_USUARIO, 'ALTERACAO', 'GRU_GRUPO', CONCAT(OLD.GRU_CODIGO, ' - ',OLD.PRI_CODIGO, ' - ', OLD.GRU_NOME_PROJETO, ' - ', @OLD_FINALIZADO), CONCAT(NEW.GRU_CODIGO, ' - ', NEW.PRI_CODIGO, ' - ', NEW.GRU_NOME_PROJETO, ' - ', @NEW_FINALIZADO));
 		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_HIS_HISTORICO_ALUNO_DISCIPLINA AFTER INSERT ON HIS_HISTORICO_ALUNO_DISCIPLINA
	FOR EACH ROW 
		BEGIN
  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.HIS_USUARIO, 'INSERCAO', 'HIS_HISTORICO_ALUNO_DISCIPLINA', 'NOVA NOTA INSERIDA', CONCAT(NEW.HIS_CODIGO, ' - ', NEW.ALU_MATRICULA, ' - ', NEW.CPI_CODIGO, ' - ', NEW.HIS_NOTA));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_UPDATE_HIS_HISTORICO_ALUNO_DISCIPLINA  AFTER UPDATE ON HIS_HISTORICO_ALUNO_DISCIPLINA
    FOR EACH ROW 
		BEGIN
 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.HIS_USUARIO, 'ALTERACAO', 'HIS_HISTORICO_ALUNO_DISCIPLINA', CONCAT(OLD.HIS_CODIGO, ' - ',OLD.ALU_MATRICULA, ' - ', OLD.CPI_CODIGO, ' - ', OLD.HIS_NOTA), CONCAT(NEW.HIS_CODIGO, ' - ', NEW.ALU_MATRICULA, ' - ', NEW.CPI_CODIGO, ' - ', NEW.HIS_NOTA));
 		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_MSG_MENSAGEM AFTER INSERT ON MSG_MENSAGEM
	FOR EACH ROW
		BEGIN
  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.MSG_USUARIO, 'INSERCAO', 'MSG_MENSAGEM', 'NOVA MENSAGEM', CONCAT(NEW.MSG_CODIGO, ' - ', NEW.REQ_CODIGO, ' - ', NEW.PRO_MATRICULA, ' - ', NEW.PER_MATRICULA, ' - ', NEW.MSG_DT_ENVIO, ' - ', NEW.MSG_CONTEUDO));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_PER_PERFIL AFTER INSERT ON PER_PERFIL
	FOR EACH ROW 
		BEGIN
		SET @NEW_PERFIL = 'COORDENADOR';

  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.PER_USUARIO, 'INSERCAO', 'PER_PERFIL', 'NOVO COORDENADOR', CONCAT(NEW.PER_MATRICULA, ' - ', @NEW_PERFIL));
  		END;
|


DELIMITER |
	CREATE TRIGGER TRG_UPDATE_PER_PERFIL AFTER UPDATE ON PER_PERFIL
    FOR EACH ROW 
		BEGIN
 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.PER_USUARIO, 'ALTERACAO', 'PER_PERFIL', CONCAT(OLD.PER_MATRICULA, ' - ',OLD.PER_DESCRICAO), CONCAT(NEW.PER_MATRICULA, ' - ', NEW.PER_DESCRICAO));
 		END;
|


DELIMITER |
	CREATE TRIGGER TRG_EXCLUSAO_PER_PERFIL AFTER DELETE ON PER_PERFIL
	FOR EACH ROW 
		BEGIN
		SET @OLD_PERFIL = 'COORDENADOR';
			INSERT INTO AUD_AUDITORIA VALUES
            (0, SYSDATE(), OLD.PER_USUARIO, 'EXCLUSAO', 'PER_PERFIL', CONCAT(OLD.PER_MATRICULA, ' - ', @OLD_PERFIL), 'COORDENADOR EXCLUIDO');
		END;
|


DELIMITER |
	CREATE TRIGGER TRG_INSERT_REQ_REQUERIMENTO AFTER INSERT ON REQ_REQUERIMENTO
	FOR EACH ROW 
		BEGIN
		SET @NEW_STATUS = 'ABERTO';
  			INSERT INTO AUD_AUDITORIA VALUES
  			(0, sysdate(), NEW.REQ_USUARIO, 'INSERCAO', 'REQ_REQUERIMENTO', 'NOVO REQUERIMENTO', CONCAT(NEW.REQ_CODIGO, ' - ', NEW.PRO_MATRICULA, ' - ', NEW.GRU_CODIGO, ' - ', NEW.REQ_ASSUNTO, ' - ', NEW.REQ_DT_REQUISICAO, ' - ', @NEW_STATUS, ' - ', NEW.REQ_CATEGORIA));
  		END;
|

DELIMITER |
	CREATE TRIGGER TRG_UPDATE_REQ_REQUERIMENTO AFTER UPDATE ON REQ_REQUERIMENTO
    FOR EACH ROW 
		BEGIN
		BEGIN
		SET @STATUS= OLD.REQ_STATUS;
        IF(@STATUS = 1) THEN
			SET @OLD_STATUS = 'ABERTO';
            SET @NEW_STATUS = 'EM ANDAMENTO';
        ELSE
			SET @OLD_STATUS = 'EM ANDAMENTO';
            SET @NEW_STATUS = 'FINALIZADO';
        END IF;

 			INSERT INTO AUD_AUDITORIA VALUES
 			(0, sysdate(), NEW.CGE_USUARIO, 'ALTERACAO', 'REQ_REQUERIMENTO', CONCAT(OLD.REQ_CODIGO, ' - ', OLD.PRO_MATRICULA, ' - ', OLD.GRU_CODIGO, ' - ', OLD.REQ_ASSUNTO, ' - ', OLD.REQ_DT_REQUISICAO, ' - ', @OLD_STATUS, ' - ', NEW.REQ_CATEGORIA), CONCAT(NEW.REQ_CODIGO, ' - ', NEW.PRO_MATRICULA, ' - ', NEW.GRU_CODIGO, ' - ', NEW.REQ_ASSUNTO, ' - ', NEW.REQ_DT_REQUISICAO, ' - ', @NEW_STATUS, ' - ', NEW.REQ_CATEGORIA));
 		END;
|

